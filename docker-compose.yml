version: '3'

services:
  data_service_db:
    container_name: data_service_db
    hostname: data_service_db
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
  auth_service_db:
    container_name: auth_service_db
    hostname: auth_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'as_auth_service'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'qwerty1'
    ports:
      - '5432:5432'
    expose:
      - '5432'
  api_gateway:
    container_name: api_gateway
    hostname: api_gateway
    build:
      context: ./API
      dockerfile: ./Dockerfile
    env_file:
      - './API/local.env'
      - './Common/common.env'
    volumes:
      - ./src:/var/www/astra_storage/auth_service/src
    ports:
      - '5000:5000'
    depends_on:
      - auth_service_db
  auth_service:
    container_name: auth_service
    hostname: auth_service
    build:
      context: ./AuthService
      dockerfile: ./Dockerfile
    env_file:
      - './AuthService/local.env'
      - './Common/common.env'
    volumes:
      - ./src:/var/www/astra_storage/auth_service/src
#    ports:
#      - "4000:4000"
    depends_on:
      - auth_service_db
  emails_service:
    container_name: emails_service
    hostname: emails_service
    build:
      context: ./EmailsService
      dockerfile: ./Dockerfile
    env_file: './AuthService/local.env'
    volumes:
      - ./src:/var/www/astra_storage/emails_service/src
#    ports:
#      - "4000:4000"
  sockets_service:
    container_name: sockets_service
    hostname: sockets_service
    build:
      context: ./SocketsService
      dockerfile: ./Dockerfile
    env_file: "./SocketsService/local.env"
    volumes:
      - ./src:/var/www/astra_storage/sockets_service/src
#    ports:
#      - "4000:4000"
  projects_service_db:
    container_name: projects_service_db
    hostname: projects_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'as_projects_service'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'qwerty1'
    ports:
      - '5432:5432'
    expose:
      - '5432'
  projects_service:
    container_name: projects_service
    hostname: projects_service
    build:
      context: ./ProjectsService
      dockerfile: ./Dockerfile
    env_file: './ProjectsService/local.env'
    volumes:
      - ./src:/var/www/astra_storage/projects_service/src
#    ports:
#      - "4000:4000"
    depends_on:
      - projects_service_db
  users_service_db:
    container_name: users_service_db
    hostname: users_service_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: 'as_users_service'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'qwerty1'
    ports:
      - '5432:5432'
    expose:
      - '5432'
  users_service:
    container_name: users_service
    hostname: users_service
    build:
      context: ./UsersService
      dockerfile: ./Dockerfile
    env_file: './UsersService/local.env'
    volumes:
      - ./src:/var/www/astra_storage/users_service/src
#    ports:
#      - "4000:4000"
    depends_on:
      - users_service_db